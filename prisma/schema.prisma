generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String               @id @default(uuid())
  email          String               @unique
  password       String
  name           String?
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  delegateAccess HolographDelegate[]
  principalOf    HolographPrincipal[]
}

model Holograph {
  id             String               @id @default(uuid())
  title          String
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  delegates      HolographDelegate[]
  principals     HolographPrincipal[]
  vitalDocuments VitalDocument[]      // New relation
}

model HolographPrincipal {
  id          String    @id @default(uuid())
  holographId String
  userId      String
  addedAt     DateTime  @default(now())
  holograph   Holograph @relation(fields: [holographId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([holographId, userId])
}

model HolographDelegate {
  id          String    @id @default(uuid())
  holographId String
  userId      String
  assignedAt  DateTime  @default(now())
  holograph   Holograph @relation(fields: [holographId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([holographId, userId])
}

model VitalDocument {
  id          String    @id @default(uuid())
  holographId String
  name        String    // Name of the document
  type        String    // Will, Trust, Advanced Health Directive, or Other
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  holograph   Holograph @relation(fields: [holographId], references: [id])

  @@index([holographId])
}